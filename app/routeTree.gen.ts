/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LandingLayoutImport } from './routes/_landing/_layout'
import { Route as AuthLayoutImport } from './routes/_auth/_layout'
import { Route as LandingLayoutIndexImport } from './routes/_landing/_layout/index'
import { Route as AuthLayoutSignUpSplatImport } from './routes/_auth/_layout/sign-up.$'
import { Route as AuthLayoutSignInSplatImport } from './routes/_auth/_layout/sign-in.$'

// Create/Update Routes

const LandingLayoutRoute = LandingLayoutImport.update({
  id: '/_landing/_layout',
  getParentRoute: () => rootRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_auth/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LandingLayoutIndexRoute = LandingLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LandingLayoutRoute,
} as any)

const AuthLayoutSignUpSplatRoute = AuthLayoutSignUpSplatImport.update({
  id: '/sign-up/$',
  path: '/sign-up/$',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutSignInSplatRoute = AuthLayoutSignInSplatImport.update({
  id: '/sign-in/$',
  path: '/sign-in/$',
  getParentRoute: () => AuthLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth/_layout': {
      id: '/_auth/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_landing/_layout': {
      id: '/_landing/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LandingLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_landing/_layout/': {
      id: '/_landing/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LandingLayoutIndexImport
      parentRoute: typeof LandingLayoutImport
    }
    '/_auth/_layout/sign-in/$': {
      id: '/_auth/_layout/sign-in/$'
      path: '/sign-in/$'
      fullPath: '/sign-in/$'
      preLoaderRoute: typeof AuthLayoutSignInSplatImport
      parentRoute: typeof AuthLayoutImport
    }
    '/_auth/_layout/sign-up/$': {
      id: '/_auth/_layout/sign-up/$'
      path: '/sign-up/$'
      fullPath: '/sign-up/$'
      preLoaderRoute: typeof AuthLayoutSignUpSplatImport
      parentRoute: typeof AuthLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthLayoutRouteChildren {
  AuthLayoutSignInSplatRoute: typeof AuthLayoutSignInSplatRoute
  AuthLayoutSignUpSplatRoute: typeof AuthLayoutSignUpSplatRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutSignInSplatRoute: AuthLayoutSignInSplatRoute,
  AuthLayoutSignUpSplatRoute: AuthLayoutSignUpSplatRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface LandingLayoutRouteChildren {
  LandingLayoutIndexRoute: typeof LandingLayoutIndexRoute
}

const LandingLayoutRouteChildren: LandingLayoutRouteChildren = {
  LandingLayoutIndexRoute: LandingLayoutIndexRoute,
}

const LandingLayoutRouteWithChildren = LandingLayoutRoute._addFileChildren(
  LandingLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof LandingLayoutRouteWithChildren
  '/': typeof LandingLayoutIndexRoute
  '/sign-in/$': typeof AuthLayoutSignInSplatRoute
  '/sign-up/$': typeof AuthLayoutSignUpSplatRoute
}

export interface FileRoutesByTo {
  '': typeof AuthLayoutRouteWithChildren
  '/': typeof LandingLayoutIndexRoute
  '/sign-in/$': typeof AuthLayoutSignInSplatRoute
  '/sign-up/$': typeof AuthLayoutSignUpSplatRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth/_layout': typeof AuthLayoutRouteWithChildren
  '/_landing/_layout': typeof LandingLayoutRouteWithChildren
  '/_landing/_layout/': typeof LandingLayoutIndexRoute
  '/_auth/_layout/sign-in/$': typeof AuthLayoutSignInSplatRoute
  '/_auth/_layout/sign-up/$': typeof AuthLayoutSignUpSplatRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/' | '/sign-in/$' | '/sign-up/$'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/' | '/sign-in/$' | '/sign-up/$'
  id:
    | '__root__'
    | '/_auth/_layout'
    | '/_landing/_layout'
    | '/_landing/_layout/'
    | '/_auth/_layout/sign-in/$'
    | '/_auth/_layout/sign-up/$'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
  LandingLayoutRoute: typeof LandingLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
  LandingLayoutRoute: LandingLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth/_layout",
        "/_landing/_layout"
      ]
    },
    "/_auth/_layout": {
      "filePath": "_auth/_layout.tsx",
      "children": [
        "/_auth/_layout/sign-in/$",
        "/_auth/_layout/sign-up/$"
      ]
    },
    "/_landing/_layout": {
      "filePath": "_landing/_layout.tsx",
      "children": [
        "/_landing/_layout/"
      ]
    },
    "/_landing/_layout/": {
      "filePath": "_landing/_layout/index.tsx",
      "parent": "/_landing/_layout"
    },
    "/_auth/_layout/sign-in/$": {
      "filePath": "_auth/_layout/sign-in.$.tsx",
      "parent": "/_auth/_layout"
    },
    "/_auth/_layout/sign-up/$": {
      "filePath": "_auth/_layout/sign-up.$.tsx",
      "parent": "/_auth/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
